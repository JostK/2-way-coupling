!!\chapter{LIB\_VTK\_IO Usage Example}
!!\label{cap:example}
!!\minitoc
!!
!!\vspace*{8mm}
!!
!!\lettrine[lines=2,loversize=-.1,lraise=0.2]{{\bf T}}{he} usage of \LIBVTKIO is quite simple. In this chapter there are some
!!example of \LIBVTKIO usage. Some of the following examples are present also in the file \MaiuscolettoBS{Test\_LIB\_VTK\_IO.f90}
!!distributed within the \LIBVTKIO.
!!
!!\section{Legacy Rectilinear Grid}
!!\label{sec:example LRECTG}
!!
!!\begin{boxred}{Legacy Rectilinear Grid}
!!\begin{verbatim}
!!...
!!integer(4), intent(IN)::   Nx
!!real(8),    intent(IN)::           p(1:Nx)
!!real(8),    intent(IN)::         rho(1:Nx)
!!real(8),    intent(IN)::           u(1:Nx)
!!real(8),    intent(IN)::       gamma(1:Nx)
!!character(*), intent(IN):: filename
!!real(8)::                  x(1:Nx)
!!integer(4)::               i
!!...
!!x=(/(i, i=1, Nx, 1)/)
!!E_IO = VTK_INI(output_format = 'ascii',                &
!!               filene        = trim(filename)//'.vtk', &
!!               title         = 'Field',                &
!!               mesh_topology = 'RECTILINEAR_GRID')
!!E_IO = VTK_GEO(Nx        = Nx,        &
!!               Ny        = 1,         &
!!               Nz        = 1,         &
!!               X         = x,         &
!!               Y         = (/0.0_8/), &
!!               Z         = (/0.0_8/))
!!E_IO = VTK_DAT(NC_NN   = Nx,      &
!!               tipo    = 'node')
!!E_IO = VTK_VAR(NC_NN   = Nx,      &
!!               varname = 'p',     &
!!               var     = p)
!!E_IO = VTK_VAR(NC_NN   = Nx,      &
!!               varname = 'rho',   &
!!               var     = rho)
!!E_IO = VTK_VAR(NC_NN   = Nx,      &
!!               varname = 'u',     &
!!               var     = u)
!!E_IO = VTK_VAR(NC_NN   = Nx,      &
!!               varname = 'gamma', &
!!               var     = gamma)
!!E_IO = VTK_VAR(NC_NN   = Nx,      &
!!               varname = 'a',     &
!!               var     = sqrt(gamma*p/rho))
!!E_IO = VTK_END()
!!...
!!\end{verbatim}
!!\end{boxred}
!!
!!\section{XML Rectilinear Grid}
!!\label{sec:example XRECTG}
!!
!!\begin{boxred}{XML Rectilinear Grid}
!!\begin{verbatim}
!!...
!!integer(4),   intent(IN):: n
!!integer(4),   intent(IN):: Nx
!!real(8),      intent(IN)::     p(1:Nx)
!!real(8),      intent(IN)::   rho(1:Nx)
!!real(8),      intent(IN)::     u(1:Nx)
!!real(8),      intent(IN):: gamma(1:Nx)
!!character(*), intent(IN):: filename
!!real(8)::                  x(1:Nx)
!!integer(4)::               i
!!...
!!x=(/(i, i=1, Nx, 1)/)
!!E_IO = VTK_INI_XML(output_format = 'ascii',                &
!!                   filename      = trim(filename)//'.vtr', &
!!                   mesh_topology = 'RectilinearGrid',      &
!!                   nx1=1,nx2=Nx,ny1=1,ny2=1,nz1=1,nz2=1)
!!E_IO = VTK_GEO_XML(nx1=1,nx2=Nx,ny1=1,ny2=1,nz1=1,nz2=1, &
!!                   X=x,Y=(/0.0_8/),Z=(/0.0_8/))
!!E_IO = VTK_DAT_XML(tipo    = 'node',   &
!!                   azione  = 'OPEN')
!!E_IO = VTK_VAR_XML(NC_NN   = Nx,      &
!!                   varname = 'p',     &
!!                   var     = p)
!!E_IO = VTK_VAR_XML(NC_NN   = Nx,      &
!!                   varname = 'rho',   &
!!                   var     = rho)
!!E_IO = VTK_VAR_XML(NC_NN   = Nx,      &
!!                   varname = 'u',     &
!!                   var     = u)
!!E_IO = VTK_VAR_XML(NC_NN   = Nx,      &
!!                   varname = 'gamma', &
!!                   var     = gamma)
!!E_IO = VTK_VAR_XML(NC_NN   = Nx,      &
!!                   varname = 'a',     &
!!                   var     = sqrt(gamma*p/rho))
!!E_IO = VTK_DAT_XML(tipo    = 'node',  &
!!                   azione  = 'CLOSE')
!!E_IO = VTK_GEO_XML()
!!E_IO = VTK_END_XML()
!!...
!!\end{verbatim}
!!\end{boxred}
!!
!!\section{Legacy Unstructured Grid}
!!\label{sec:example LUNSTG}
!!
!!\begin{boxred}{Legacy Unstructured Grid}
!!\begin{verbatim}
!!...
!!integer(4), parameter::       Nn   = 27
!!integer(4), parameter::       Ne   = 11
!!real(4),    dimension(1:Nn):: x_uns
!!real(4),    dimension(1:Nn):: y_uns
!!real(4),    dimension(1:Nn):: z_uns
!!integer(4), dimension(1:Ne):: tipo
!!integer(4), dimension(1:60):: connect
!!real(8),    dimension(1:Nn):: var_uns_grid
!!integer(4), dimension(1:Nn):: var_uns_grid_X
!!integer(4), dimension(1:Nn):: var_uns_grid_Y
!!integer(4), dimension(1:Nn):: var_uns_grid_Z
!!...
!!E_IO = VTK_INI(output_format  = 'BINARY',                   &
!!               filename       = 'UNST_GRID_BIN.vtk',        &
!!               title          = 'Unstructured Grid Example' &
!!               mesh_topology  = 'UNSTRUCTURED_GRID')
!!
!!x_uns=(/0,1,2,0,1,2, &
!!        0,1,2,0,1,2, &
!!        0,1,2,0,1,2, &
!!        0,1,2,0,1,2, &
!!        0,1,2/)
!!y_uns=(/0,0,0,1,1,1, &
!!        0,0,0,1,1,1, &
!!        1,1,1,1,1,1, &
!!        1,1,1,1,1,1, &
!!        1,1,1/)
!!z_uns=(/0,0,0,0,0,0, &
!!        1,1,1,1,1,1, &
!!        2,2,2,3,3,3, &
!!        4,4,4,5,5,5, &
!!        6,6,6/)
!!
!!E_IO = VTK_GEO(Nnodi = Nn, &
!!               X=x_uns,Y=y_uns,Z=z_uns)
!!
!!connect = (/ 8, 0, 1, 4, 3, 6, 7,10, 9, &
!!             8, 1, 2, 5, 4, 7, 8,11,10, &
!!             4, 6,10, 9,12,             &
!!             4, 5,11,10,14,             &
!!             6,15,16,17,14,13,12,       &
!!             6,18,15,19,16,20,17,       &
!!             4,22,23,20,19,             &
!!             3,21,22,18,                &
!!             3,22,19,18,                &
!!             2,26,25,                   &
!!             1,24/)
!!tipo = (/12, &
!!         12, &
!!         10, &
!!         10, &
!!          7, &
!!          6, &
!!          9, &
!!          5, &
!!          5, &
!!          3, &
!!          1/)
!!E_IO = VTK_CON(NCelle  = Ne,       &
!!               connect = connect,  &
!!               tipo    = tipo)
!!E_IO = VTK_DAT(NC_NN   = Nn,       &
!!               tipo    = 'node')
!!
!!var_uns_grid =(/ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, &
!!                 6.0, 7.0, 8.0, 9.0,10.0,11.0, &
!!                12.0,13.0,14.0,15.0,16.0,17.0, &
!!                18.0,19.0,20.0,21.0,22.0,23.0, &
!!                24.0,25.0,26.0/)
!!
!!E_IO = VTK_VAR(NC_NN   = Nn,        &
!!               varname = 'scalars', &
!!               var     = var_uns_grid)
!!
!!var_uns_grid_X=(/1,1,0,1,1,0, &
!!                 1,1,0,1,1,0, &
!!                 0,0,0,0,0,0, &
!!                 0,0,0,0,0,0, &
!!                 0,0,0/)
!!var_uns_grid_Y=(/0,1,2,0,1,2, &
!!                 0,1,2,0,1,2, &
!!                 0,0,0,0,0,0, &
!!                 0,0,0,0,0,0, &
!!                 0,0,0/)
!!var_uns_grid_Z=(/0,0,0,0,0,0, &
!!                 0,0,0,0,0,0, &
!!                 1,1,1,1,1,1, &
!!                 1,1,1,1,1,1, &
!!                 1,1,1/)
!!E_IO = VTK_VAR(NC_NN   = Nn,             &
!!               varname = 'vectors',      &
!!               varX    = var_uns_grid_X, &
!!               varY    = var_uns_grid_Y, &
!!               varZ    = var_uns_grid_Z)
!!E_IO = VTK_END()
!!...
!!\end{verbatim}
!!\end{boxred}
!!
!!\section{XML Unstructured Grid}
!!\label{sec:example XUNSTG}
!!
!!\begin{boxred}{XML Unstructured Grid}
!!\begin{verbatim}
!!...
!!integer(4), parameter::       Nn   = 27
!!integer(4), parameter::       Ne   = 11
!!real(4),    dimension(1:Nn):: x_uns
!!real(4),    dimension(1:Nn):: y_uns
!!real(4),    dimension(1:Nn):: z_uns
!!integer(4), dimension(1:Ne):: tipo
!!integer(4), dimension(1:49):: connect_xml
!!integer(4), dimension(1:Ne):: offset_xml
!!real(8),    dimension(1:Nn):: var_uns_grid
!!integer(4), dimension(1:Nn):: var_uns_grid_X
!!integer(4), dimension(1:Nn):: var_uns_grid_Y
!!integer(4), dimension(1:Nn):: var_uns_grid_Z
!!...
!!E_IO = VTK_INI_XML(output_format = 'BINARY',              &
!!                   filename      = 'XML_UNST_BINARY.vtu', &
!!                   mesh_topology = 'UnstructuredGrid')
!!
!!x_uns=(/0,1,2,0,1,2, &
!!        0,1,2,0,1,2, &
!!        0,1,2,0,1,2, &
!!        0,1,2,0,1,2, &
!!        0,1,2/)
!!y_uns=(/0,0,0,1,1,1, &
!!        0,0,0,1,1,1, &
!!        1,1,1,1,1,1, &
!!        1,1,1,1,1,1, &
!!        1,1,1/)
!!z_uns=(/0,0,0,0,0,0, &
!!        1,1,1,1,1,1, &
!!        2,2,2,3,3,3, &
!!        4,4,4,5,5,5, &
!!        6,6,6/)
!!
!!E_IO = VTK_GEO_XML(Nnodi     = Nn, &
!!                   NCelle    = Ne, &
!!                   X=x_uns,Y=y_uns,Z=z_uns)
!!
!!connect_xml = (/ 0, 1, 4, 3, 6, 7,10, 9, &
!!                 1, 2, 5, 4, 7, 8,11,10, &
!!                 6,10, 9,12,             &
!!                 5,11,10,14,             &
!!                15,16,17,14,13,12,       &
!!                18,15,19,16,20,17,       &
!!                22,23,20,19,             &
!!                21,22,18,                &
!!                22,19,18,                &
!!                26,25,                   &
!!                24/)
!!offset_xml = (/ 8, &
!!               16, &
!!               20, &
!!               24, &
!!               30, &
!!               36, &
!!               40, &
!!               43, &
!!               46, &
!!               48, &
!!               49/)
!!
!!E_IO = VTK_CON_XML(NCelle  = Ne,          &
!!                   connect = connect_xml, &
!!                   offset  = offset_xml,  &
!!                   tipo    = (/12_1, &
!!                               12_1, &
!!                               10_1, &
!!                               10_1, &
!!                                7_1, &
!!                                6_1, &
!!                                9_1, &
!!                                5_1, &
!!                                5_1, &
!!                                3_1, &
!!                                1_1/))
!!
!!E_IO = VTK_DAT_XML(tipo    = 'node', &
!!                   azione  = 'OPEN')
!!
!!var_uns_grid =(/ 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, &
!!                 6.0, 7.0, 8.0, 9.0,10.0,11.0, &
!!                12.0,13.0,14.0,15.0,16.0,17.0, &
!!                18.0,19.0,20.0,21.0,22.0,23.0, &
!!                24.0,25.0,26.0/)
!!
!!E_IO = VTK_VAR_XML(NC_NN   = Nn,        &
!!                   varname = 'scalars', &
!!                   var     = var_uns_grid)
!!
!!var_uns_grid_X=(/1,1,0,1,1,0, &
!!                 1,1,0,1,1,0, &
!!                 0,0,0,0,0,0, &
!!                 0,0,0,0,0,0, &
!!                 0,0,0/)
!!var_uns_grid_Y=(/0,1,2,0,1,2, &
!!                 0,1,2,0,1,2, &
!!                 0,0,0,0,0,0, &
!!                 0,0,0,0,0,0, &
!!                 0,0,0/)
!!var_uns_grid_Z=(/0,0,0,0,0,0, &
!!                 0,0,0,0,0,0, &
!!                 1,1,1,1,1,1, &
!!                 1,1,1,1,1,1, &
!!                 1,1,1/)
!!
!!E_IO = VTK_VAR_XML(NC_NN   = Nn,             &
!!                   varname = 'vector',       &
!!                   varX    = var_uns_grid_X, &
!!                   varY    = var_uns_grid_Y, &
!!                   varZ    = var_uns_grid_Z)
!!E_IO = VTK_DAT_XML(tipo    = 'node',   &
!!                   azione  = 'CLOSE')
!!E_IO = VTK_GEO_XML()
!!E_IO = VTK_END_XML()
!!...
!!\end{verbatim}
!!\end{boxred}